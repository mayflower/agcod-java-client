{
  "version": "2.0",
  "metadata": {
    "apiVersion": "2019-11-29",
    "endpointPrefix": "AGCODService",
    "jsonVersion": "1.1",
    "protocol": "json",
    "serviceAbbreviation": "agcod",
    "serviceFullName": "Amazon AGCOD",
    "serviceId": "agcod",
    "signatureVersion": "v4",
    "targetPrefix": "com.amazonaws.agcod.AGCODService",
    "uid": "agcod-2019-11-29"
  },
  "operations": {
    "CreateGiftCard": {
      "name": "CreateGiftCard",
      "http": {
        "method": "POST",
        "requestUri": "/CreateGiftCard"
      },
      "input": {
        "shape": "CreateGiftCardInput"
      },
      "output": {
        "shape": "GiftCardResponse"
      },
      "errors": [
        {
          "shape": "InternalServerError"
        },
        { "shape": "SystemError" },
        { "shape": "PartnerInputError" },
        { "shape": "PartnerAccessError" },
        { "shape": "ResendError" },
        { "shape": "UnknownError" }
      ],
      "documentation": "<p>The <code>CreateGiftCardRequest</code> requests creates a Amazon Gift Card</p>"
    },
    "CancelGiftCard": {
      "name": "CancelGiftCard",
      "http": {
        "method": "POST",
        "requestUri": "/CancelGiftCard"
      },
      "input": {
        "shape": "CancelGiftCardInput"
      },
      "output": {
        "shape": "CancelGiftCardResponse"
      },
      "errors": [
        { "shape": "InternalServerError" },
        { "shape": "SystemError" },
        { "shape": "PartnerInputError" },
        { "shape": "PartnerAccessError" },
        { "shape": "ResendError" },
        { "shape": "UnknownError" }
      ],
      "documentation": "<p>The <code>CancelGiftCardRequest</code> request cancels the Gift Card. This operation can only be executed within 15 minutes of the creation request time stamp</p>"
    },
    "GetAvailableFunds": {
      "name": "GetAvailableFunds",
      "http": {
        "method": "POST",
        "requestUri": "/GetAvailableFunds"
      },
      "input": {
        "shape": "GetAvailableFundsInput"
      },
      "output": {
        "shape": "GetAvailableFundsResponse"
      },
      "errors": [
        { "shape": "InternalServerError" },
        { "shape": "SystemError" },
        { "shape": "PartnerInputError" },
        { "shape": "PartnerAccessError" },
        { "shape": "ResendError" },
        { "shape": "UnknownError" }
      ],
      "documentation": "<p>The <code>GetAvailableFundsRequest</code> returns the amount of funds currently available in your Amazon Incentives account. It provides an alternative to logging into our portal for viewing available funds. A potential use-case of this operation is to develop a customized alerting system or checking the balance of an account periodically.</p>"
    }
  },
  "shapes": {
    "CreateGiftCardInput": {
      "type": "structure",
      "required": [
        "creationRequestId, partnerId, value"
      ],
      "members": {
        "creationRequestId": {
          "shape": "String",
          "documentation": "<p>A unique identifier for every CreateGiftCard call that results in the creation of a GC. The partner must generate a new value for every Create request (except for retries) To keep this as the globally unique transaction identifier, the partner needs to: <ul><li>Generate an alphanumeric value that is unique within your system. This ID can have up to 40 alphanumeric characters.</li><li>Begin the creationRequestId value with your partnerID.</li></ul> </p>"
        },
        "partnerId": {
          "shape": "String",
          "documentation": "<p>A unique identifier (CASE SENSITIVE, 1st letter is capitalized and the next four are lower case) provided by the Amazon GC team. This value is part of the Payload of every AGCOD Gateway request.</p>"
        },
        "value": {
          "shape": "AgcodValue"
        },
        "programId": {
          "shape": "String",
          "documentation": "<p>The programID is an approved identifier provided by Amazon through a submission process. The programID is alphanumeric and can be up to 100 characters in length.</p>"
        },
        "productType": {
          "shape": "ProductType",
          "documentation": "<p>The ProductType field is required for the creation of an Amazon Product Voucher Claim Code. Only authorized partners can create Product Vouchers. This attribute is alpha-numeric with a max length of 50 characters.</p>"
        },
        "externalReference": {
          "shape": "String",
          "documentation": "<p>You can use the externalReference field to pass your own reference identifier as a string when making gift code requests (up to 100 Unicode characters).</p>"
        }
      },
      "documentation": "<p>Represents the input of a <code>CreateGiftCardRequest</code> operation.</p>"
    },
    "CancelGiftCardInput": {
      "type": "structure",
      "required": [
        "creationRequestId", "partnerId"
      ],
      "members": {
        "creationRequestId": {
          "shape": "String",
          "documentation": "<p>A unique identifier for every CreateGiftCard call that results in the creation of a GC. The partner must generate a new value for every Create request (except for retries) To keep this as the globally unique transaction identifier, the partner needs to: <ul><li>Generate an alphanumeric value that is unique within the partnerâ€™s systems. ID may have a maximum of 19 alphanumeric characters</li><li>Creation Request ID must begin with the partnerID.</li></ul> </p>"
        },
        "partnerId": {
          "shape": "String",
          "documentation": "<p>A unique identifier (CASE SENSITIVE, 1st letter is capitalized and the next four are lower case) provided by the Amazon GC team. This value is part of the Payload of every AGCOD Gateway request.</p>"
        }
      },
      "documentation": "<p>Represents the input of a <code>CancelGiftCardRequest</code> operation.</p>"
    },
    "GetAvailableFundsInput": {
      "type": "structure",
      "required": [
        "partnerId"
      ],
      "members": {
        "partnerId": {
          "shape": "String",
          "documentation": "<p>A unique identifier (CASE SENSITIVE, 1st letter is capitalized and the next four are lower case) provided by the Amazon GC team. This value is part of the Payload of every AGCOD Gateway request.</p>"
        }
      },
      "documentation": "<p>Represents the input of a <code>GetAvailableFundsRequest</code> operation.</p>"
    },
    "AgcodValue": {
      "type": "structure",
      "members": {
        "amount": {
          "shape": "Amount"
        },
        "currencyCode": {
          "shape": "CurrencyCode",
          "documentation": "<p>USD for US, EUR for EU, JPY for JP, CAD for CA, AUD for AU, TRY for TR, AED for UAE</p>"
        }
      }
    },
    "Amount": {
      "type": "float",
      "max": 500000,
      "min": 0.01
    },
    "CurrencyCode": {
      "type": "string",
      "enum": [
        "USD",
        "EUR",
        "GBP",
        "JPY",
        "CNY",
        "CAD",
        "AED"
      ]
    },
    "GiftCardResponse": {
      "type": "structure",
      "members": {
        "cardNumber": {
          "shape": "String",
          "documentation": "<p>Docu goes here.</p>"
        },
        "cardStatus": {
          "shape": "String",
          "documentation": "<p>Docu goes here.</p>"
        },
        "expirationDate": {
          "shape": "String",
          "documentation": "<p>Docu goes here.</p>"
        },
        "value": {
          "shape": "AgcodValue",
          "documentation": "<p>Docu goes here.</p>"
        },
        "creationRequestId": {
          "shape": "String",
          "documentation": "<p>Docu goes here.</p>"
        },
        "gcClaimCode": {
          "shape": "String",
          "documentation": "<p>Docu goes here.</p>"
        },
        "gcExpirationDate": {
          "shape": "String",
          "documentation": "<p>Docu goes here.</p>"
        },
        "gcId": {
          "shape": "String",
          "documentation": "<p>Docu goes here.</p>"
        },
        "status": {
          "shape": "AgcodResponseStatus",
          "documentation": "<p>Docu goes here.</p>"
        }
      },
      "documentation": "<p>Represents the output of a <code>CreateGiftCard</code> operation.</p>"
    },
    "CancelGiftCardResponse": {
      "type": "structure",
      "members": {
        "creationRequestId": {
          "shape": "String",
          "documentation": "<p>Docu goes here.</p>"
        },
        "status": {
          "shape": "AgcodResponseStatus",
          "documentation": "<p>Docu goes here.</p>"
        }
      },
      "documentation": "<p></p>"
    },
    "GetAvailableFundsResponse": {
      "type": "structure",
      "members": {
        "availableFunds": {
          "shape": "AgcodValue",
          "documentation": "<p>Docu goes here.</p>"
        },
        "timestamp": {
          "shape": "Date",
          "documentation": "<p>Docu goes here.</p>"
        },
        "status": {
          "shape": "AgcodResponseStatus",
          "documentation": "<p>Docu goes here.</p>"
        }
      },
      "documentation": "<p></p>"
    },
    "AgcodResponseStatus": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "FAILURE",
        "RESEND"
      ]
    },
    "ProductType": {
      "type": "string",
      "enum": [
        "bookPV",
        "hwPV",
        "ppePV",
        "culturePV"
      ]
    },
    "InternalServerError": {
      "type": "structure",
      "members": {
        "message": {
          "shape": "String",
          "documentation": "<p>The server encountered an internal error trying to fulfill the request.</p>"
        }
      },
      "documentation": "<p>An error occurred on the server side.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true
    },
    "SystemError": {
      "type": "structure",
      "members": {
        "message": {
          "shape": "String"
        },
        "errorCode": { "shape":  "String" },
        "errorType": { "shape":  "String" },
        "agcodResponse": { "shape":  "GiftCardResponse" }
      },
      "documentation": "<p>F100: System Errors</p>",
      "error": {
        "httpStatusCode": 400,
        "code": "F100"
      },
      "exception": true
    },
    "PartnerInputError": {
      "type": "structure",
      "members": {
        "message": {
          "shape": "String"
        },
        "errorCode": { "shape":  "String" },
        "errorType": { "shape":  "String" },
        "agcodResponse": { "shape":  "GiftCardResponse" }
      },
      "documentation": "<p>F200: Partner Input Errors</p>",
      "error": {
        "httpStatusCode": 400,
        "code": "F200",
        "senderFault": true
      },
      "exception": true
    },
    "PartnerAccessError": {
      "type": "structure",
      "members": {
        "message": {
          "shape": "String"
        },
        "errorCode": { "shape":  "String" },
        "errorType": { "shape":  "String" },
        "agcodResponse": { "shape":  "GiftCardResponse" }
      },
      "documentation": "<p>F300: Partner Account/Access/Onboarding Errors</p>",
      "error": {
        "httpStatusCode": 400,
        "code": "F300"
      },
      "exception": true
    },
    "ResendError": {
      "type": "structure",
      "members": {
        "message": {
          "shape": "String"
        },
        "errorCode": { "shape":  "String" },
        "errorType": { "shape":  "String" },
        "agcodResponse": { "shape":  "GiftCardResponse" }
      },
      "documentation": "<p>F400: RESEND Errors</p>",
      "error": {
        "httpStatusCode": 400,
        "code": "F400"
      },
      "exception": true
    },
    "UnknownError": {
      "type": "structure",
      "members": {
        "message": {
          "shape": "String"
        },
        "errorCode": { "shape":  "String" },
        "errorType": { "shape":  "String" },
        "agcodResponse": { "shape":  "GiftCardResponse" }
      },
      "documentation": "<p>F500: Unknown Errors</p>",
      "error": {
        "httpStatusCode": 400,
        "code": "F500"
      },
      "exception": true
    },
    "PositiveInteger": {
      "type": "integer",
      "min": 1
    },
    "PositiveLong": {
      "type": "long",
      "min": 1
    },
    "String": {
      "type": "string"
    },
    "DateRfc822": {
      "type": "timestamp",
      "timestampFormat":"rfc822"
    },
    "Date": {
      "type": "timestamp"
    },
    "Double": {
      "type": "double"
    },
    "Integer": {
      "type": "integer"
    }
  }
}